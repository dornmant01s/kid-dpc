name: Android DPC CI

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Create GitHub Release (true/false)"
        required: false
        default: "false"
  push:
    branches: [ main ]     # ← 브랜치 커밋 시 자동 실행
    tags: [ "v*" ]         # ← 태그 푸시/릴리스 시도 유지


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK packages
        run: |
          sdkmanager --install "platforms;android-35" "build-tools;35.0.0"

      - name: Build (Release)
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7
          arguments: assembleRelease

      - name: Decode keystore (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > release.keystore
          echo "ANDROID_KEYSTORE_PATH=$GITHUB_WORKSPACE/release.keystore" >> $GITHUB_ENV

      - name: Re-build signed (optional)
        if: ${{ env.ANDROID_KEYSTORE_PATH != '' && secrets.ANDROID_KEY_ALIAS != '' }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.7
          arguments: assembleRelease

      - name: Compute checksum & QR JSON
        id: qr
        shell: bash
        run: |
          APK="app/build/outputs/apk/release/app-release.apk"
          if [ ! -f "$APK" ]; then
            echo "Release APK missing, using debug APK for QR (testing only)."
            APK="app/build/outputs/apk/debug/app-debug.apk"
          fi
          SHA256=$(openssl dgst -sha256 -binary "$APK" | openssl base64 -A | tr '+/' '-_' | tr -d '=')
          TAG="${GITHUB_REF_NAME}"
          FILE_NAME=$(basename "$APK")
          DOWNLOAD_URL="${{ github.server_url }}/${{ github.repository }}/releases/download/${TAG}/${FILE_NAME}"
          mkdir -p dist
          cat > dist/qr.json <<EOF
{
  "android.app.extra.PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME": "app.dpc.kid/.admin.KidAdminReceiver",
  "android.app.extra.PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION": "${DOWNLOAD_URL}",
  "android.app.extra.PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM": "${SHA256}"
}
EOF
          echo "qr=dist/qr.json" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            app/build/outputs/apk/**/*.apk
            dist/qr.json

      - name: Create GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') || inputs.release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/outputs/apk/release/app-release.apk
            dist/qr.json
